config {
    type: "table",
    description: "Creates metrics for each generated date",
    columns: {
        assessed_application_count: "count of assessments completed on generated date",
        available_application_count: "count of new drafts created plus applications submitted and assessments not complete on generated date",
        fi_requested_applications_count: "count of assessments complete on generated date that required further information",
        fi_requested_by_applications_assessed: "completed assessments that required further information vs completed assessments on generated date",
        generated_date: "generated date for date comparisons",
        support_by_available_application: "support ticket count vs available application count on generated date",
        support_ticket_count: "TRA QTS Enquiries and Professional Recognition Zendesk support ticket count on generated date",

    },

}

WITH
  date_range AS (
  SELECT
    DATE(date) AS generated_date
  FROM
    UNNEST(GENERATE_DATE_ARRAY('2023-08-18', DATE_SUB(CURRENT_DATE(), INTERVAL 1 DAY))) AS date ),
  pre_aggregated_fir AS (
  SELECT
    assessments.application_form_id AS application_form_id,
    MAX(further_information_requests.requested_at) AS requested_at
  FROM
    `apply-for-qts-in-england.dataform_production.assessments_version_afqts` AS assessments
  INNER JOIN
    `apply-for-qts-in-england.dataform_production.further_information_requests_version_afqts` AS further_information_requests
  ON
    assessments.id = further_information_requests.assessment_id
  GROUP BY
    assessments.application_form_id ),
  available_application_metrics AS (
  SELECT
    generated_date AS application_metrics_date,
    COUNT(DISTINCT id) AS available_application_count
  FROM
    date_range
  INNER JOIN
    `apply-for-qts-in-england.dataform_production.application_forms_version_afqts` application_forms
  ON
    generated_date >= DATE(valid_from)
    AND (generated_date <= DATE(valid_to)
      OR DATE(valid_to) IS NULL)
  WHERE
    (submitted_at IS NOT NULL
      AND awarded_at IS NULL
      AND declined_at IS NULL)
    OR (submitted_at IS NULL
      AND DATE(created_at) = generated_date)
  GROUP BY
    generated_date ),
  assessed_application_metrics AS (
  SELECT
    COALESCE(DATE(awarded_at), DATE(DECLINED_AT)) AS assessed_date,
    COUNT(DISTINCT id) AS assessed_application_count,
    COUNT(DISTINCT
    IF
      (pre_aggregated_fir.requested_at IS NOT NULL, id, NULL)) AS fi_requested_applications_count
  FROM
    `apply-for-qts-in-england.dataform_production.application_forms_version_afqts`
  LEFT JOIN
    pre_aggregated_fir
  ON
    id = pre_aggregated_fir.application_form_id
  WHERE
    awarded_at IS NOT NULL
    OR declined_at IS NOT NULL
  GROUP BY
    assessed_date ),
  support_metrics AS (
  SELECT
    date_range.generated_date AS support_metrics_date,
    COUNT(DISTINCT ticket_id) AS support_ticket_count
  FROM
    date_range
  LEFT JOIN
    `rugged-abacus-218110.dataform.support_ticket_details`
  ON
    date_range.generated_date = DATE(created_at)
  WHERE
    brand_name = 'TRA'
    AND group_name IN ('TRA - QTS Enquiries',
      'TRA - Professional Recognition')
  GROUP BY
    date_range.generated_date )
SELECT
  date_range.generated_date,
  support_metrics.support_ticket_count,
  available_application_metrics.available_application_count,
  ROUND(support_metrics.support_ticket_count / NULLIF(available_application_metrics.available_application_count, 0) * 100, 2) AS support_by_available_application,
  assessed_application_metrics.assessed_application_count,
  fi_requested_applications_count,
  ROUND(fi_requested_applications_count / assessed_application_metrics.assessed_application_count,2) AS fi_requested_by_applications_assessed
FROM
  date_range
INNER JOIN
  available_application_metrics
ON
  date_range.generated_date = available_application_metrics.application_metrics_date
INNER JOIN
  support_metrics
ON
  date_range.generated_date = support_metrics.support_metrics_date
INNER JOIN
  assessed_application_metrics
ON
  date_range.generated_date = assessed_application_metrics.assessed_date
ORDER BY
  date_range.generated_date DESC
