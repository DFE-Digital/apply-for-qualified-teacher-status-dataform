config {
    type: "table",
    description: ""
}


-- 1) Get all versions with proper date ranges
WITH applications_version AS (
  SELECT
    id,
    DATE(valid_from) AS valid_from,
    DATE(COALESCE(DATE(valid_to), DATE '9999-12-31')) AS valid_to,
    statuses
  FROM `apply-for-qts-in-england.dataform_production.application_forms_version_afqts`
),

-- 2) Get the earliest creation date per application
applications_created AS (
  SELECT
    id,
    MIN(valid_from) AS created_date
  FROM applications_version
  GROUP BY id
),

-- 3) Determine first_non_draft_date and expiry_date
applications AS (
  SELECT
    c.id,
    c.created_date,
    DATE_ADD(c.created_date, INTERVAL 6 MONTH) AS expiry_date,
    (
      SELECT MIN(v.valid_from)
      FROM applications_version v
      WHERE v.id = c.id AND v.statuses != 'draft'
    ) AS first_non_draft_date
  FROM applications_created c
),

-- 4) Build the calendar from earliest created to latest expiry (or today)
calendar AS (
  SELECT day
  FROM UNNEST(
    GENERATE_DATE_ARRAY(
      (SELECT MIN(created_date) FROM applications),
      GREATEST(CURRENT_DATE(), (SELECT MAX(expiry_date) FROM applications)),
      INTERVAL 1 DAY
    )
  ) AS day
)

-- 5) Aggregate per day
SELECT
  cal.day,
  
  -- Active drafts: created <= day <= expiry AND version status = draft on that day
  COUNT(DISTINCT a.id) AS active_drafts,
  
  -- Cumulative finished: first_non_draft_date exists and <= day
  COUNT(DISTINCT CASE
    WHEN a.first_non_draft_date IS NOT NULL
         AND a.first_non_draft_date <= cal.day
    THEN a.id
  END) AS cumulative_finished,
  
  -- Cumulative expired: expiry_date <= day
  COUNT(DISTINCT CASE
    WHEN a.expiry_date <= cal.day THEN a.id
  END) AS cumulative_expired

FROM calendar cal
JOIN applications a
  ON a.created_date <= cal.day
LEFT JOIN applications_version v
  ON v.id = a.id
  AND cal.day BETWEEN v.valid_from AND v.valid_to
  AND v.statuses = 'draft'
WHERE v.id IS NOT NULL  -- only count if there is a draft version on that day
GROUP BY cal.day
ORDER BY cal.day
